exportPattern("^[[:alpha:]]+")

S3method(boot, gsm)
S3method(fitted, gsm)
S3method(fitted.values, gsm)
S3method(model.matrix, gsm)
S3method(predict, gsm)
S3method(residuals, gsm)
S3method(resid, gsm)
S3method(summary, gsm)
S3method(print, gsm)
S3method(print, summary.gsm)
S3method(print, boot.gsm)

S3method(boot, sm)
S3method(fitted, sm)
S3method(fitted.values, sm)
S3method(residuals, sm)
S3method(resid, sm)
S3method(model.matrix, sm)
S3method(predict, sm)
S3method(summary, sm)
S3method(print, sm)
S3method(print, summary.sm)
S3method(print, boot.sm)

S3method(boot, ss)
S3method(fitted, ss)
S3method(fitted.values, ss)
S3method(model.matrix, ss)
S3method(plot, ss)
S3method(plot, boot.ss)
S3method(predict, ss)
S3method(residuals, ss)
S3method(resid, ss)
S3method(summary, ss)
S3method(print, ss)
S3method(print, summary.ss)
S3method(print, boot.ss)

importFrom("grDevices", "col2rgb", "colorRampPalette", "rainbow", "rgb")
importFrom("graphics", "axis", "box", "lines", "lines.default", 
             "plot.default", "polygon")
importFrom("stats", ".nknots.smspl", "approx", "cov", "dbinom", "dgamma", "dnorm", 
           "dpois", "fitted", "fitted.values", "gaussian", "IQR", "as.formula", "cor", "dist", 
           "make.link", "model.frame", "model.matrix", "model.response", 
           "na.pass", "nlm", "optimize", "pchisq", "pf", "pnorm", "poisson", 
           "predict", "pt", "qnorm", "quantile",  "rbinom", "resid", "residuals", 
           "rgamma", "rnbinom", "rpois", "rnorm", "sd", "symnum", "var")
importFrom("utils", "head", "setTxtProgressBar", "txtProgressBar")